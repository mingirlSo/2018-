make_plot<-function(k){
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7) %>% as.numeric() ==k)
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
}  #각 구별 12월 수량합 (number)
t_sum_all <- aggregate(number ~ date, train1, sum) #서울 전체 물류량 합
t_sum_all$number<-t_sum_all$number/25 #서울 평균
t_sum_all$date2<-substr(t_sum_all$date,6,7)
#j<- t_sum_all[t_sum_all$date2=="12",]$number - a[[2]] #12월 서울 평균- 0구
aa<-data.frame()
for(i in (1:25)){
ab<-t_sum_all[t_sum_all$date2 %>% as.numeric()==k,]$number - a[[i*2]]
aa<-rbind(aa,ab)
} #12월 서울평균 - 각 구
#a12<-aa
}
make_plot(12)
rm(c(a12,a,ab))
rm(ls=c(a12,a,ab))
rm(ls=list(a12,a,ab))
rm(a12,a,ab)
make_plot<-function(k){
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7) %>% as.numeric() ==k)
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
}  #각 구별 12월 수량합 (number)
t_sum_all <- aggregate(number ~ date, train1, sum) #서울 전체 물류량 합
t_sum_all$number<-t_sum_all$number/25 #서울 평균
t_sum_all$date2<-substr(t_sum_all$date,6,7)
#j<- t_sum_all[t_sum_all$date2=="12",]$number - a[[2]] #12월 서울 평균- 0구
aa<-data.frame()
for(i in (1:25)){
ab<-t_sum_all[t_sum_all$date2 %>% as.numeric()==k,]$number - a[[i*2]]
aa<-rbind(aa,ab)
} #12월 서울평균 - 각 구
#a12<-aa
}
#rm(a12,a,ab)
make_plot(12)
#rm(a12,a,ab)
mp<-make_plot(12)
#함수화
make_plot<-function(k){
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7) %>% as.numeric() ==k)
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
}  #각 구별 12월 수량합 (number)
}
make_plot(12)
#함수화
make_plot<-function(k){
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7) %>% as.numeric() ==k)
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
return(a)
}  #각 구별 12월 수량합 (number)
}
make_plot(12)
#함수화
make_plot<-function(k){
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7) %>% as.numeric() ==k)
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
}  #각 구별 12월 수량합 (number)
t_sum_all <- aggregate(number ~ date, train1, sum) #서울 전체 물류량 합
t_sum_all$number<-t_sum_all$number/25 #서울 평균
t_sum_all$date2<-substr(t_sum_all$date,6,7)
#j<- t_sum_all[t_sum_all$date2=="12",]$number - a[[2]] #12월 서울 평균- 0구
aa<-data.frame()
for(i in (1:25)){
ab<-t_sum_all[t_sum_all$date2 %>% as.numeric()==k,]$number - a[[i*2]]
aa<-rbind(aa,ab)
return(aa)
} #12월 서울평균 - 각 구
#a12<-aa
}
#rm(a12,a,ab)
make_plot(12)
#rm(a12,a,ab)
mp<-sapply(1:12,make_plot)
#rm(a12,a,ab)
mp<-sapply(c(1),make_plot)
mp
#rm(a12,a,ab)
mp<-sapply(c(1,2),make_plot)
mp
#rm(a12,a,ab)
mp<-sapply(c(1:12),make_plot)
mp
mp2 <- data.frame(matrix(unlist(mp), nrow=length(mp), byrow=T)) #list to dataframe
length(mp)
unlist(mp)
unlist(mp) %>% length()
mp2
View(mp2)
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
}  #각 구별 12월 수량합 (number)
t_sum_all <- aggregate(number ~ date, train1, sum) #서울 전체 물류량 합
t_sum_all$number<-t_sum_all$number/25 #서울 평균
t_sum_all$date2<-substr(t_sum_all$date,6,7)
j<- t_sum_all[t_sum_all$date2=="12",]$number - a[[2]] #12월 서울 평균- 0구
aa<-data.frame()
for(i in (1:25)){
ab<-t_sum_all[t_sum_all$date2=="12",]$number - a[[i*2]]
aa<-rbind(aa,ab)
} #12월 서울평균 - 각 구
a12<-aa #위 과정 반복
a12
mp[1]
mp[2]
sapply(mp, length)
View(mp)
mp
#####
a<-list()
for (i in 0:24){
train_n<-train1[train1$arrive_gu==i,]
train_m <- subset(train_n, substr(train_n$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_m, sum)
a<-append(a,t_sum)
}  #각 구별 12월 수량합 (number)
dim(a)
a
t_sum_all <- aggregate(number ~ date, train1, sum) #서울 전체 물류량 합
t_sum_all$number<-t_sum_all$number/25 #서울 평균
t_sum_all$date2<-substr(t_sum_all$date,6,7)
j<- t_sum_all[t_sum_all$date2=="12",]$number - a[[2]] #12월 서울 평균- 0구
j
aa<-data.frame()
for(i in (1:25)){
ab<-t_sum_all[t_sum_all$date2=="12",]$number - a[[i*2]]
aa<-rbind(aa,ab)
} #12월 서울평균 - 각 구
a12<-aa #위 과정 반복
a12
View(a12)
sapply(mp, length)
mp
###########12월 for문 시각화 ####
for (ix in 0:24){
train_1<-train1[train1$arrive_gu==i,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
paste0(t_sum,"_",i)<-t_sum
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
png(width = 500, height = 500, filename = paste0("png",i,".png"))
print(a)
dev.off()
}
###########12월 for문 시각화 ####
for (i in 0:24){
train_1<-train1[train1$arrive_gu==i,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
paste0(t_sum,"_",i)<-t_sum
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
png(width = 500, height = 500, filename = paste0("png",i,".png"))
print(a)
dev.off()
}
###########12월 for문 시각화 ####
for (i in 0:24){
train_1<-train1[train1$arrive_gu==i,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
t_sum<-paste0(t_sum,"_",i)
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
png(width = 500, height = 500, filename = paste0("png",i,".png"))
print(a)
dev.off()
}
train_1<-train1[train1$arrive_gu==1,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
t_sum<-paste0(t_sum,"_",1)
t_sum
train_1<-train1[train1$arrive_gu==1,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
t_sum
###########12월 for문 시각화 ####
for (i in 0:24){
train_1<-train1[train1$arrive_gu==i,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
#t_sum<-paste0(t_sum,"_",i)
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
png(width = 500, height = 500, filename = paste0("png",i,".png"))
print(a)
dev.off()
}
train_1<-train1[train1$arrive_gu==1,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
#t_sum<-paste0(t_sum,"_",i)
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
png(width = 500, height = 500, filename = paste0("png",1,".png"))
print(a)
a
a
#t_sum<-paste0(t_sum,"_",i)
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
print(a)
train_1<-train1[train1$arrive_gu==1,]
train_n <- subset(train_1, substr(train_1$date, 6,7)=="12")
t_sum <- aggregate(number ~ date, train_n, sum)
#t_sum<-paste0(t_sum,"_",i)
a=ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
#t_sum<-paste0(t_sum,"_",i)
a<-ggplot(data=t_sum, aes(x=date, y=number)) + geom_line(color='black', size=1.5)
a
##########
###################################################### 월별 변동계수
train<-fread('train_3.csv')
rm(list=ls())
gc()
train<-fread("training_new.csv",encoding="UTF-8")
train<-as.data.frame(train)
str(train) #변수명 v1~v4
colnames(train)<-c('date','send_post','arrive_gu','number') #변수명 수정
#발송국(@->서울 형태 ):246 /도착구:25 / 수량
summary(train) #수량 통계량
train$date<-ymd(train$date) #to date type
head(train,10)
# send_post 정렬
train<-train %>% arrange(date,send_post,arrive_gu)
unique(train$date) #ex. 성탄전 전후 1일의 데이터는 없음(test셋)
# padding (date별 모든 조합 만들기 , 거래량이 없던 관계를 만들어줌)
date = rep(unique(train$date),each=246*25) # 발송국 246 X 도착구 25
send_post = rep(unique(train$send_post),each=25,length(unique(train$date))) #345
arrive_gu = rep(unique(train$arrive_gu),84870)
train_padding = data.frame(date,send_post,arrive_gu) #date별 모든 조합 만들기
head(train_padding)
train_2 = merge(train_padding,train,by=c('date','send_post','arrive_gu'),all.x=T) #모든 조합에 number 넣기(train 기반)
train_2[is.na(train_2)] <- 0
colSums(is.na(train_2))
head(train_2)
#발송국 라벨링 (to number)
#send_code = rep(1:length(unique(train$send_post)),each=25,length(unique(train$date)))
#train_2$send_code = send_code
train_2$send_post <-train_2$send_post %>% as.numeric()
head(train_2)
train<-train_2 #대체
rm(train_2)
rm(train_padding)
### 변동계수 (월별/요일별)
str(train)
train2<-subset(train, substr(train$date,6,7)=='12')
train2$wd<-weekdays(train2$date)
str(train)
str(train2)
train2$we <- factor(train2$we, levels=c('월요일','화요일','수요일','목요일','금요일','토요일','일요일'))
train2$wd <- factor(train2$wd, levels=c('월요일','화요일','수요일','목요일','금요일','토요일','일요일'))
all<-melt(data=train2, id.vars=c("arrive_gu",'wd'), measure.vars = ('number'))
head(all)
all1<-cast(data=all, arrive_gu+we ~ variable, fun=sum)
p_load(xlsx, data.table, caret, reshape2, tidyverse, psych, lubridate, reshape2)
all1<-cast(data=all, arrive_gu+we ~ variable, fun=sum)
p_load(xlsx, data.table, caret, reshape2, tidyverse, psych, lubridate, reshape, reshape2)
all1<-cast(data=all, arrive_gu+we ~ variable, fun=sum)
all1<-cast(data=all, arrive_gu+wd ~ variable, fun=sum)
head(all1)
longa<-spread(all1, we, number)
longa<-spread(all1, wd, number)
head(longa)
sd_all<-apply(longa[2:8], 1, sd)
mean_all<-apply(longa[2:8], 1, mean)
cv_all<-sd_all/mean_all
cv_all %>% head(10)
cv_all %>% head()
length(cv_all)
head(longa)
### 변동계수 (요일별) ################
train_01<-train
train_01$date<-as.Date(train_01$date)
str(train_01)
train_01$date<-as.Date(train_01$date)
train_01$we <- weekdays(train_01$date)
train_01$we <- factor(train_01$we, levels=c('월요일','화요일','수요일','목요일','금요일','토요일','일요일'))
head(train_01)
str(train_01)
we1<-melt(data=train_01, id.vars=c('arrive_gu','we'), measure.vars = ('number'))
we2<-cast(data=we1, arrive_gu+we ~ variable, fun=mean)
we3<-cast(data=we1, arrive_gu+we ~ variable, fun=sd)
long_mean<-spread(we2, we, number)
long_sd<-spread(we3, we, number)
cv_day<- long_sd / long_mean
cv_day
cv_day<-cv_day[,-1]
arrive_gu1<-rep(0:24, each=1)
cv_day <- data.frame(arrive_gu1, cv_day)
colnames(cv_day)<-c('arrive_gu','cv_mon','cv_tue','cv_wed','cv_thu','cv_fri','cv_sat','cv_sun')
cv_day
### 변동계수 (월) ################
train_01<-train
str(train_01)
train_01$date<-as.Date(train_01$date)
train_01$month <- substr(train_01$date,5,6)
train_01$month <- factor(train_01$month, levels=c(1,2,3,4,5,6,6,7,8,9,10,11,12))
str(train_01)
train_01$month <- substr(train_01$date,6,71)
train_01$month <- substr(train_01$date,6,7)
train_01$month <- factor(train_01$month)
head(train_01)
str(train_01)
we1<-melt(data=train_01, id.vars=c('arrive_gu','month'), measure.vars = ('number'))
month2<-cast(data=we1, arrive_gu+month ~ variable, fun=mean)
month3<-cast(data=we1, arrive_gu+month ~ variable, fun=sd)
long_mean<-spread(month2, month, number)
long_sd<-spread(month3, we, number)
month2<-cast(data=we1, arrive_gu+month ~ variable, fun=mean)
month3<-cast(data=we1, arrive_gu+month ~ variable, fun=sd)
long_mean<-spread(month2, month, number)
long_sd<-spread(month3, month, number)
head(long_sd)
cv_month<- long_sd / long_mean
cv_month
arrive_gu1<-rep(0:24, each=1)
cv_month <- data.frame(arrive_gu1, cv_month)
cv_month
cv_month<- long_sd / long_mean
cv_month
View(cv_month)
cv_month<-cv_month[,-1]
arrive_gu1<-rep(0:24, each=1)
cv_month <- data.frame(arrive_gu1, cv_month)
colnames(cv_day)<-c('arrive_gu','cv_1','cv_2','cv_3','cv_4','cv_5','cv_6','cv_7','cv_8','cv_9','cv_10','cv_11','cv_12')
colnames(cv_month)<-c('arrive_gu','cv_1','cv_2','cv_3','cv_4','cv_5','cv_6','cv_7','cv_8','cv_9','cv_10','cv_11','cv_12')
cv_month
#write.csv(cv_day, 'cv_month.csv')
### 변동계수 (구) -? #####
train_01<-train
str(train_01)
train_01$date<-as.Date(train_01$date)
head(long_sd)
### 변수 merge  ###################
# 공휴일 merge
str(holiday)
holiday = fread('holi1.csv')
holiday<-as.data.frame(holiday)
head(holiday)
unique(holiday$holiday) # 신정, 설날, 기독탄신일, 추석, 석가탄신일, 삼일절날은 2로 묶음.
# 대체공휴일, 삼일절, 국회의원선거일, 광복절, 개천절, 한글날, 대통령선거일, 임시공휴일, 1월1일,
# 대체휴무일, 전국동시지방선거, 어린이날, 부처님오신날 는 1로 묶음
# NA는 0으로 묶음.
holiday$holiday <- as.character(holiday$holiday)
holiday[is.na(holiday)] = 0
holiday[holiday$holiday=='신정' | holiday$holiday == '설날' | holiday$holiday == '기독탄신일' |
holiday$holiday == '추석' | holiday$holiday =='석가탄신일' | holiday$holiday == '삼일절',]$holiday = 2
holiday[holiday$holiday =='대체공휴일' | holiday$holiday =='삼일절' | holiday$holiday =='국회의원선거일' |
holiday$holiday == '광복절' | holiday$holiday =='개천절' | holiday$holiday =='한글날' |
holiday$holiday == '대통령선거일' | holiday$holiday =='임시공휴일' | holiday$holiday =='1월1일' |
holiday$holiday =='대체휴무일' | holiday$holiday =='전국동시지방선거' | holiday$holiday =='어린이날' |
holiday$holiday =='부처님오신날' | holiday$holiday =='현충일',]$holiday = 1
holiday[holiday$holiday =='0' | holiday$holiday =='주말',]$holiday = 0
head(holiday)
holiday$holiday <- as.factor(holiday$holiday)
holiday$weekday <- as.character(holiday$weekday)
holiday[holiday$weekday=='월',]$weekday = 1
holiday[holiday$weekday=='화',]$weekday = 2
holiday[holiday$weekday=='수',]$weekday = 3
holiday[holiday$weekday=='목',]$weekday = 4
holiday[holiday$weekday=='금',]$weekday = 5
holiday[holiday$weekday=='토',]$weekday = 6
holiday[holiday$weekday=='일',]$weekday = 7
holiday$weekday <- as.factor(holiday$weekday)
holiday$date <- ymd(holiday$date)
str(holiday)
### 변수 merge  ###################
# 공휴일 merge
str(holiday)
str(holiday)
head(holiday,20) #
str(train)
rm(list=ls())
gc()
train<-fread("training_new.csv",encoding="UTF-8")
train<-as.data.frame(train)
str(train) #변수명 v1~v4
colnames(train)<-c('date','send_post','arrive_gu','number') #변수명 수정
#발송국(@->서울 형태 ):246 /도착구:25 / 수량
summary(train) #수량 통계량
train$date<-ymd(train$date) #to date type
head(train,10)
# send_post 정렬
train<-train %>% arrange(date,send_post,arrive_gu)
unique(train$date) #ex. 성탄전 전후 1일의 데이터는 없음(test셋)
# padding (date별 모든 조합 만들기 , 거래량이 없던 관계를 만들어줌)
date = rep(unique(train$date),each=246*25) # 발송국 246 X 도착구 25
send_post = rep(unique(train$send_post),each=25,length(unique(train$date))) #345
arrive_gu = rep(unique(train$arrive_gu),84870)
train_padding = data.frame(date,send_post,arrive_gu) #date별 모든 조합 만들기
head(train_padding)
train_2 = merge(train_padding,train,by=c('date','send_post','arrive_gu'),all.x=T) #모든 조합에 number 넣기(train 기반)
train_2[is.na(train_2)] <- 0
colSums(is.na(train_2))
head(train_2)
#발송국 라벨링 (to number)
#send_code = rep(1:length(unique(train$send_post)),each=25,length(unique(train$date)))
#train_2$send_code = send_code
train_2$send_post <-train_2$send_post %>% as.numeric()
head(train_2)
train<-train_2 #대체
rm(train_2)
rm(train_padding)
holiday = read.csv('holi1.csv')
head(holiday)
unique(holiday$holiday) # 신정, 설날, 기독탄신일, 추석, 석가탄신일, 삼일절날은 2로 묶음.
# 대체공휴일, 삼일절, 국회의원선거일, 광복절, 개천절, 한글날, 대통령선거일, 임시공휴일, 1월1일,
# 대체휴무일, 전국동시지방선거, 어린이날, 부처님오신날 는 1로 묶음
# NA는 0으로 묶음.
holiday$holiday <- as.character(holiday$holiday)
holiday[is.na(holiday)] = 0
holiday[holiday$holiday=='신정' | holiday$holiday == '설날' | holiday$holiday == '기독탄신일' |
holiday$holiday == '추석' | holiday$holiday =='석가탄신일' | holiday$holiday == '삼일절',]$holiday = 2
holiday[holiday$holiday =='대체공휴일' | holiday$holiday =='삼일절' | holiday$holiday =='국회의원선거일' |
holiday$holiday == '광복절' | holiday$holiday =='개천절' | holiday$holiday =='한글날' |
holiday$holiday == '대통령선거일' | holiday$holiday =='임시공휴일' | holiday$holiday =='1월1일' |
holiday$holiday =='대체휴무일' | holiday$holiday =='전국동시지방선거' | holiday$holiday =='어린이날' |
holiday$holiday =='부처님오신날' | holiday$holiday =='현충일',]$holiday = 1
holiday[holiday$holiday =='0' | holiday$holiday =='주말',]$holiday = 0
holiday$holiday <- as.factor(holiday$holiday)
holiday$weekday <- as.character(holiday$weekday)
holiday[holiday$weekday=='월',]$weekday = 1
holiday[holiday$weekday=='화',]$weekday = 2
holiday[holiday$weekday=='수',]$weekday = 3
holiday[holiday$weekday=='목',]$weekday = 4
holiday[holiday$weekday=='금',]$weekday = 5
holiday[holiday$weekday=='토',]$weekday = 6
holiday[holiday$weekday=='일',]$weekday = 7
holiday$weekday <- as.factor(holiday$weekday)
holiday$date <- as.Date(holiday$date)
train1<-merge(train,holiday,by="date",all = FALSE)
head(holiday,20) #
str(train1)
train1$cluster1 <- as.factor(train1$cluster1)
train1 <- as.data.table(train1)
str(train1) # cluster, weekday는 더미로
train1$arrive_gu <- as.factor(train1$arrive_gu)
dum1= as.data.frame(model.matrix(~cluster1,train1))
head(dum1)
colnames(dum1)<-paste(colnames(dum1),"_1",sep = "")
colnames(dum1)
dum2= as.data.frame(model.matrix(~weekday,train1))
head(dum2)
colnames(dum2)<-paste(colnames(dum2),"_2",sep = "")
colnames(dum2)
train2<-train1 %>% select(-c(cluster1,weekday)) %>% cbind(dum1,dum2)
colnames(train2)
### 변수 merge  ###################
# 날짜 데이터 + 더미
str(train)
train$year<-substr(train$date,1,4) %>% as.factor()
train$month<-substr(train$date,6,7) %>% as.factor()
str(train)
# 공휴일 merge
str(holiday)
head(holiday,20) #
train1<-merge(train,holiday,by="date",all = FALSE)
str(train1)
train1$cluster1 <- as.factor(train1$cluster1)
train1 <- as.data.table(train1)
str(train1) # cluster, weekday는 더미로
train1$arrive_gu <- as.factor(train1$arrive_gu)
dum1= as.data.frame(model.matrix(~cluster1,train1))
head(dum1)
colnames(dum1)<-paste(colnames(dum1),"_1",sep = "")
colnames(dum1)
dum2= as.data.frame(model.matrix(~weekday,train1))
head(dum2)
colnames(dum2)<-paste(colnames(dum2),"_2",sep = "")
colnames(dum2)
train2<-train1 %>% select(-c(cluster1,weekday)) %>% cbind(dum1,dum2)
colnames(train2)
#send_post 제거
str(train2)
unique(train2)
unique(train2$send_post)
length(unique(train2$send_post))
train2 = train2 %>% select(-send_post) ## send_post 삭제
#send_post 제거
str(train2)
###test
test_sam<-fread("test_sample2.csv")
str(test_sam)
colnames(train2)
str(test_sam) #우체국.택배,
colnames(test_sam)
colnames(trai)
colnames(traim)
colnames(train)
colnames(train2)
